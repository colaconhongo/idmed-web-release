import{Y as k,bJ as S,db as d,bL as h,bM as n,cd as A,cf as b,a$ as v}from"./index.28c7e456.js";import{u as p}from"./StockMethod.5d6dd1ce.js";const{showloading:D,closeLoading:l}=v(),u=p(),{isOnline:M,isMobile:y}=k(),a=S(d),i=h[d.entity];var f={apiSave(t){return n().post("stockAlert",t).then(e=>{a.save(e.data)})},get(t){if(t>=0)return n().get("stockAlert?offset="+t).then(e=>{a.save(e.data),t=t+100,e.data.length>0?this.get(t):l()})},apiUpdate(t,e){return n().patch("stockAlert/"+t,e).then(s=>{a.save(s.data)})},delete(t){return n().delete("stockAlert/"+t).then(()=>{a.destroy(t)})},apiFetchById(t){return n().get("/stockAlert/"+t).then(e=>{a.save(e.data),e.data.length>0&&setTimeout(this.get,2)})},async apiGetStockAlertAll(t){if(y.value){const e=await this.localDbGetStockAlertMobile();return a.save(e),e}else await n().get(`/dashBoard/getStockAlertAll/${t}`).then(e=>(a.save(e.data),l(),e.data))},apiGetStockAlert(t,e){return n().get(`/dashBoard/getStockAlert/${t}/${e}`)},getStockAlertsByClinic(){const t=a.withAllRecursive(2).get();return l(),t},saveStockAlert(t){a.save(t)},newInstanceEntity(){return a.getModel().$newInstance()},async localDbAddOrUpdate(t){return i.add(JSON.parse(JSON.stringify(t))).then(()=>{a.save(JSON.parse(JSON.stringify(t)))})},async getFromBackEnd(t){if(t>=0)return await n().get("stockAlert?offset="+t+"&max=100").then(e=>{a.addBulkMobile(e.data),console.log("Data synced from backend: stockAlert"),t=t+100,e.data.length>0&&this.getFromBackEnd(t)}).catch(e=>{console.error("Error syncing data from backend:",e),console.log(e)})},addBulkMobile(t){return i.bulkAdd(t).then(()=>{a.save(JSON.parse(t))}).catch(e=>{console.log(e)})},async localDbGetAll(){try{const t=await i.toArray();return a.save(t),t}catch(t){console.log(t)}},async localDbGetStockAlertMobile(){const t=[],e=A.getActiveDrugs();for(const s of e)if(await b.hasStockMobile(s)){const o=new d,g=await u.localDbGetStockBalanceByDrug(s),c=await u.localDbGetQuantitySuppliedByDrug(s),r=c/3;o.id=s.id,o.balance=g,o.drugName=s.name,o.drug=s,o.avgConsuption=Number.isInteger(r)?r:r.toFixed(2),c===0?o.state="Sem Consumo":o.balance>c/3?o.state="Acima do Consumo M\xE1ximo":o.balance>c/3&&(o.state="Ruptura de Stock"),t.push(o)}return t}};export{f as S};
