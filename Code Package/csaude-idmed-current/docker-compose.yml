version: '3.3'
services:
  db:
    image: hub.csaude.org.mz/idmed/postgres:15.6
    shm_size: 2g
    ports:
      - "9876:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "./pgmaster-data:/var/lib/postgresql/data"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    restart: always

  psql: &psql
    image: hub.csaude.org.mz/idmed/postgres:15.6
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
       - "./csaude-idmed-current/app/backend/scripts/:/usr/local/idmed/scripts/"
    command: bash

  initscript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Master create main Database ===
        psql -U postgres -h db -p 5432 -c "create database idmed ;"

  initializationscript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Master Initialization script ===
        psql -U postgres -h db -p 5432 -d idmed < /usr/local/idmed/scripts/schemaProvincialServer_1.5.0.sql

  updatescript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Master DB Update script ===
        psql -U postgres -h db -p 5432 -d idmed < /usr/local/idmed/scripts/UpdateiDMEDdb.sql

  updateidartmigrationserver:
     <<: *psql
     command:
       - bash
       - -c
       - |
         echo === Master create data base IDART ===
         psql -U postgres -h db -p 5432 -d idmed < /usr/local/idmed/scripts/MigrationServerConfig.sql

  initbucardoscript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Master create user replication and bucardo ===
        psql -U postgres -h db -p 5432 -c "create user bucardo with password 'bucardo' SUPERUSER ;"
        psql -U postgres -h db -p 5432 -c "create database bucardo OWNER bucardo ;"

  initlogicalreplicationscript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Master create SUBSCRIPTION ===
        psql -U postgres -h db -p 5432 -d idmed < /usr/local/idmed/scripts/CreateSubscriber.sql

  initbackupdatabasescript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Backup create Database ===
        psql -U postgres -h db -p 5432 -c "create database idmedbackup ;"
        psql -U postgres -h db -p 5432 -d idmedbackup < /usr/local/idmed/scripts/schemaProvincialServer_1.5.0.sql

  backupscript:
          <<: *psql
          command:
            - bash
            - -c
            - |
              echo === Backup DB script ===
              sh /usr/local/idmed/scripts/backup.sh

  restorescript:
          <<: *psql
          command:
            - bash
            - -c
            - |
              echo === Backup DB Restore script ===
              psql -U postgres -h db -p 5432 -d idmedbackup < /usr/local/idmed/scripts/idmed_disable.sql
              psql -U postgres -h db -p 5432 -d idmedbackup < /usr/local/idmed/scripts/idmedBackup.sql
              psql -U postgres -h db -p 5432 -d idmedbackup < /usr/local/idmed/scripts/idmed_enable.sql

  renamedatabasescript:
    <<: *psql
    command:
      - bash
      - -c
      - |
        echo === Rename idmedbackup to idmed ===
        psql -U postgres -h db -p 5432 -c "ALTER DATABASE idmed RENAME TO idmed_backup_1_4_0 ;"
        psql -U postgres -h db -p 5432 -c "ALTER DATABASE idmedbackup RENAME TO idmed ;"

  backendserver:
    image: hub.csaude.org.mz/idmed/idmed_backend:1.5.0
    ports:
      - "3000:8884"
    links:
       - db
    environment:
       DATABASE_HOST: db
    depends_on:
       - db
    restart: always
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/log/idmed/:/var/log/idmed_logs"
      - "./csaude-idmed-current/app/backend/scripts:/backend/scripts"
      - "./csaude-idmed-current/app/backend/build/idmed-backend.war:/usr/src/idmed/idmed-backend.war"
    command:
      - /bin/bash
      - -c
      - chmod 777 /usr/src/idmed/idmed-backend.war && java -jar /usr/src/idmed/idmed-backend.war

  frontendserver:
    image: hub.csaude.org.mz/idmed/idmed_frontend:1.5.0
    ports:
      - "5000:80"
    depends_on:
      - backendserver
    restart: always
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "./csaude-idmed-current/app/frontend/spa:/usr/share/nginx/html"
      - "./csaude-idmed-current/app/frontend/nginx_conf.conf:/etc/nginx/conf.d/default.conf"
    command:
        - sh
        - -c
        - |
          echo === Check weather BackEnd is up running ===
          while [[ "$$(curl --connect-timeout 2 -s -o /dev/null -w ''%{http_code}'' backendserver:8884/api/province)" != "200" ]];
          do
            echo BackEnd indisponivel - aguarde ...;
            sleep 5;
          done;
          echo BackEnd DISPONIVEL - Avante!!!!;

          nginx -g 'daemon off;'

  bucardo:
    image: hub.csaude.org.mz/idmed/idmed_bucardo:1.5.0
    stdin_open: true
    tty: true
    environment:
       DATABASE_HOST: db
       TARGET_DB_NAME: ${TARGET_DB_NAME}
       TARGET_DB_USER: ${TARGET_DB_USER}
       TARGET_DB_PASS: ${TARGET_DB_PASS}
       TARGET_DB_PORT: ${TARGET_DB_PORT}
       TARGET_DB_HOST: ${TARGET_DB_HOST}
       SOURCE_DB_NAME: ${SOURCE_DB_NAME}
       SOURCE_DB_USER: ${SOURCE_DB_USER}
       SOURCE_DB_PASS: ${SOURCE_DB_PASS}
    volumes:
      - "./csaude-idmed-current/app/bucardo/example:/media/bucardo"
      - "./csaude-idmed-current/app/bucardo/lib/customcode.filter.us.pl:/customcode.filter.us.pl"
      - "./csaude-idmed-current/app/bucardo/lib/entrypoint.sh:/entrypoint.sh"
      - "./csaude-idmed-current/app/bucardo/lib/sub_entrypoint.sh:/sub_entrypoint.sh"
      - "./csaude-idmed-current/.env:/.env"
      - "./csaude-idmed-current/app/bucardo/etc/bucardorc:/etc/bucardorc"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    command:
      - /bin/bash
      - -c
      - mkdir -p /var/run/bucardo && chown postgres /var/run/bucardo && usermod -aG bucardo postgres && sh /entrypoint.sh
    depends_on:
      - db

  pgbackups:
    image: hub.csaude.org.mz/idmed/idmed-postgres-backup-local:1.5.0
    restart: always
    volumes:
      - /var/opt/idmed/pgbackups:/backups
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    links:
      - db
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_EXTRA_OPTS=${POSTGRES_EXTRA_OPTS}
      - SCHEDULE=${SCHEDULE}
      - BACKUP_KEEP_DAYS=${BACKUP_KEEP_DAYS}
      - BACKUP_KEEP_WEEKS=${BACKUP_KEEP_WEEKS}
      - BACKUP_KEEP_MONTHS=${BACKUP_KEEP_MONTHS}
      - HEALTHCHECK_PORT=${HEALTHCHECK_PORT}
